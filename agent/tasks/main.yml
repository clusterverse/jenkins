---

- block:
    - name: jenkins/agent | Install required packages
      become: yes
      apt:
        name: ['openjdk-17-jre-headless']
        update_cache: yes
      when: ansible_os_family == 'Debian'
      notify: restart agent service

    - name: "jenkins/agent | Create {{jenkins_agent.bindir}}"
      become: yes
      file:
        path: "{{jenkins_agent.bindir}}"
        mode: 0755
        state: directory

    - name: jenkins/agent | Create remoting subdirectory
      become: yes
      file:
        path: "{{jenkins_home_dir}}/remoting"
        mode: 0755
        owner: "{{jenkins_username}}"
        group: "{{jenkins_username}}"
        state: directory

    - name: jenkins/agent | Get secret
      uri:
        url: "{{ jenkins_controller_url }}/computer/{{ inventory_hostname }}/jenkins-agent.jnlp"
        force_basic_auth: yes
        return_content: yes
        url_username: "{{jenkins_admin_username}}"
        url_password: "{{jenkins_admin_password}}"
      register: r__uri__agent_jnlp

    - name: jenkins/agent | secret str
      debug:
        msg: "{{r__uri__agent_jnlp.content | regex_replace('.*<jnlp><application-desc><argument>([a-z0-9]*).*', '\\1') }}"

    - name: jenkins/agent | Get agent.jar
      become: yes
      get_url:
        url: "{{ jenkins_controller_url }}/jnlpJars/agent.jar"
        dest: "{{jenkins_agent.bindir}}/agent.jar"
        owner: "{{jenkins_username}}"
        group: "{{jenkins_username}}"
      notify: restart agent service

    - name: jenkins/agent | install systemd service file
      become: yes
      copy:
        dest: "/etc/systemd/system/jenkins-agent.service"
        force: yes    # remote file will be replaced when contents are different to the existing
        content: |-
          Description=Jenkins Agent
          Wants=network.target
          After=network.target
    
          [Service]
          WorkingDirectory=/home/jenkins
          ExecStart=java -jar {{jenkins_agent.bindir}}/agent.jar -jnlpUrl {{ jenkins_controller_url }}/computer/{{ inventory_hostname }}/jenkins-agent.jnlp -secret {{secret}} -workDir "/home/jenkins" -failIfWorkDirIsMissing
          Restart=always
          User={{jenkins_username}}
    
          [Install]
          WantedBy=multi-user.target
      vars:
        secret: "{{r__uri__agent_jnlp.content | regex_replace('.*<jnlp><application-desc><argument>([a-z0-9]*).*', '\\1') }}"
      notify: restart agent service

    - name: jenkins/agent | enable and start service and reread systemd configs
      become: yes
      systemd:
        name: jenkins-agent.service
        enabled: yes
        state: started
        daemon_reload: yes
  vars:
    jenkins_controller_url: "http://{% if cluster_vars.dns_server is defined and cluster_vars.dns_server != '' and cluster_vars.dns_user_domain is defined %}{{ groups['controller'][0] }}.{{ cluster_vars.dns_user_domain | regex_replace('\\.*$') }}{% else %}{{ hostvars[groups['controller'][0]]['ansible_host'] }}{% endif %}:80"
