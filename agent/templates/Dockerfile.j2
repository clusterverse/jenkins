FROM openjdk:11-jre

ENV SWARM_VERSION={{jenkins_agent.swarm_version}}
ENV HOME {{jenkins_home_dir}}
ENV JENKINS_HOME {{jenkins_home_dir}}
ENV JENKINS_EXECUTORS {{ansible_processor_vcpus}}
ENV PIPENV_VENV_IN_PROJECT=true

# Create user & install swarm-client.jar
RUN mkdir -p ${JENKINS_HOME} \
  && chown {{jenkins_uid}}:{{jenkins_gid}} ${JENKINS_HOME} \
  && groupadd -g {{jenkins_gid}} {{jenkins_username}} \
  && useradd -d ${JENKINS_HOME} -u {{jenkins_uid}} -g {{jenkins_gid}} -m -s /bin/bash {{jenkins_username}} \
  && curl -o /bin/swarm-client.jar -SL https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$SWARM_VERSION/swarm-client-$SWARM_VERSION.jar

### Note: use pip to install pipenv (not apt) to avoid pypa/pipenv#2196 (when using PIPENV_VENV_IN_PROJECT)
RUN apt-get update \
  && apt-get install -y git vim sudo procps python3-pip \
  && apt-get install -y --no-install-recommends apt-transport-https ca-certificates curl gnupg-agent software-properties-common \
  && pip3 install pipenv \
  && curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \
  && add-apt-repository "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else ansible_architecture }}] https://download.docker.com/linux/debian $(lsb_release -cs) stable" \
  && apt-get update && apt-get install -y --no-install-recommends docker-ce-cli

# Create a 'docker' group to mirror the docker group on the host. Note: Cannot `usermod -a -G docker jenkins` here.  Need to start the container with --group-add docker (in Ansible, add to the 'groups')
RUN ((getent group docker && groupmod -g {{host_docker_gid}} docker) || addgroup docker --gid {{host_docker_gid}})

USER {{jenkins_username}}

VOLUME ${JENKINS_HOME}
WORKDIR ${JENKINS_HOME}


CMD ["sh", "-c", "java -jar /bin/swarm-client.jar -master ${JENKINS_MASTER} -username ${JENKINS_USER} -password ${JENKINS_PASS} -name ${JENKINS_NAME} -executors ${JENKINS_EXECUTORS}"]
