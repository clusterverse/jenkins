FROM jenkins/jenkins:{{jenkins_master.docker_image}}

ARG JAVA_OPTS
ENV JAVA_OPTS "-Djenkins.install.runSetupWizard=false ${JAVA_OPTS:-}"

#Needed for Jenkins Job Builder - it doesn't currently support either Session IDs or CSRF crumb (https://storyboard.openstack.org/#!/story/2006489)
ENV JAVA_OPTS "-Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true -Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true ${JAVA_OPTS:-}"

ENV JENKINS_HOME {{jenkins_home_dir}}
ENV HOME {{jenkins_home_dir}}
ENV CACHE_DIR=${JENKINS_HOME}/.cache
ENV PIPENV_CACHE_DIR=${JENKINS_HOME}/.cache

##ENV JENKINS_UC_DOWNLOAD=https://ftp.halifax.rwth-aachen.de/jenkins/
#ENV JENKINS_UC_DOWNLOAD=https://mirror.gruenehoelle.nl/jenkins/
#ENV JENKINS_UC=https://mirror.gruenehoelle.nl/jenkins/updates/stable/update-center.actual.json
#ENV JENKINS_UC_EXPERIMENTAL=http://mirror.gruenehoelle.nl/jenkins/updates/experimental/update-center.actual.json
#ENV JENKINS_PLUGIN_INFO=http://mirror.gruenehoelle.nl/jenkins/updates/current/plugin-versions.json

## Add extensive logging
# ENV JAVA_OPTS "-Djava.util.logging.config.file=/usr/share/jenkins/ref/log.properties ${JAVA_OPTS:-}"
# RUN printf 'handlers=java.util.logging.ConsoleHandler\n\
# jenkins.level=FINEST\n\
# java.util.logging.ConsoleHandler.level=FINEST'\
# > /usr/share/jenkins/ref/log.properties

USER root

ENV CASC_JENKINS_CONFIG "/var/jenkins_casc"

# Options for jenkins-plugin-cli: https://github.com/jenkinsci/plugin-installation-manager-tool
RUN mkdir -p ${CASC_JENKINS_CONFIG} && \
    jenkins-plugin-cli --verbose --plugins {{jenkins_master.plugins | join(' ') }} && \
    echo '{{ casc_config | to_json(separators=(',',':')) }}' > "${CASC_JENKINS_CONFIG}/jenkins.yaml"

RUN apt-get update \
  && apt-get install -y pipenv git vim sudo \
  && apt-get install -y --no-install-recommends apt-transport-https ca-certificates curl gnupg-agent software-properties-common \
  && curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \
  && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" \
  && apt-get update && apt-get install -y --no-install-recommends docker-ce

# Change the docker group ID to the same as the host so that non-root users can access the socket via its group membership.
# Note: Cannot `usermod -a -G docker jenkins` the Jenkins user to the docker group here, because the container is already running as the jenkins user.  Need to start the container with --group-add docker (in Ansible, add to the 'groups')
RUN groupmod -g {{docker_group_id}} docker

#USER jenkins
#
#VOLUME ${JENKINS_HOME}/worker
#WORKDIR ${JENKINS_HOME}/worker
#
#ARG UID=1000
#ARG GID=1000
