---

- name: jenkins/common | Install required packages (gnupg2 for docker GPG key)
  become: true
  apt:
    name: ['git', 'gnupg2', 'python3-pip', 'python3-docker', 'iptables-persistent']
    update_cache: true
  when: ansible_os_family == 'Debian'

- name: jenkins/common | install Docker community edition
  include_tasks: docker-ce.yml


- name: jenkins/common | Create user group, named as per username (with same gid as uid if uid is defined)
  become: true
  group:
    name: "{{ jenkins_username }}"
    gid: "{{ jenkins_gid }}"

# Note: must run after docker install for docker group to exist
- name: jenkins/common | linux users
  become: true
  user:
    name: "{{ jenkins_username }}"
    group: "{{ jenkins_username }}"
    home: "{{ jenkins_home_dir }}"
    uid: "{{ jenkins_uid }}"
    shell: "/usr/sbin/nologin"
    groups: ["docker"]

- name: jenkins/common | set unlimited core files (ulimit -c)
  become: true
  community.general.pam_limits:
    domain: "{{jenkins_username}}"
    limit_type: "-"
    limit_item: core
    value: unlimited

- name: jenkins/common | set unlimited fsize (ulimit -f)
  become: true
  community.general.pam_limits:
    domain: "{{jenkins_username}}"
    limit_type: "-"
    limit_item: fsize
    value: unlimited

- name: jenkins/common | set 4096/8192 nofile (ulimit -n)
  become: true
  community.general.pam_limits:
    domain: "{{jenkins_username}}"
    limit_type: "{{ item.key }}"
    limit_item: nofile
    value: "{{ item.value }}"
  with_dict: {'soft': 4096, 'hard': 8192}

- name: jenkins/common | set 30654 nproc (ulimit -u)
  become: true
  community.general.pam_limits:
    domain: "{{jenkins_username}}"
    limit_type: "-"
    limit_item: nproc
    value: 30654

- name: jenkins/common | change ownership of mountpoints
  become: true
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ jenkins_username }}"
    group: "{{ jenkins_username }}"
  with_items:
    - "{{ jenkins_controller.jobs_dir }}"

- name: jenkins/common | install Docker build images
  include_tasks: docker-build-images.yml
