---

host_docker:
  data_root_dir: "/var/lib/docker"
  network:
    docker0_default_address_pools: []     # Optional.  If commented-out, the default local pools are used ([{"base":"172.17.0.0/12","size":16},{"base":"192.168.0.0/16","size":20}]}).  If set to a valid list<dict> (e.g. in case of clash with host network), that is used instead.  If set to an empty list, the the docker0 bridge is disabled, which means --network must be passed when creating containers.  (This is a hassle, but preferred, as default bridge is considered legacy: https://docs.docker.com/network/bridge/#use-the-default-bridge-network)
    container:                            # Settings for the container network
      mode: bridge                        # Configure either 'host' or 'bridge' networking.  If set to host, we disable Docker's iptables se we can redirect 80:8080 and 443:8443
      name: "jenkins"                     # Optional, only valid if mode='bridge' (above).   If omitted, docker uses the 'docker0' bridge
#      cidr: "192.168.254.1/24"            # Optional, only valid if mode='bridge' (above).   If omitted, docker selects a cidr from a default pool).  If this is set, 'name' must also be set.

#    docker0_default_address_pools: [{"base":"192.168.100.1/24","size":26}]     # Optional.   If commented-out, the default local pools are used ([{"base":"172.17.0.0/12","size":16},{"base":"192.168.0.0/16","size":20}]}).  If set to a valid list<dict> (e.g. in case of clash with host network), that is used instead.  If set to an empty list, the the docker0 bridge is disabled, which means --network must be passed when creating containers.  (This is a hassle, but preferred, as default bridge is considered legacy: https://docs.docker.com/network/bridge/#use-the-default-bridge-network)
#    container:                            # Settings for the container network
#      mode: bridge                        # Configure either 'host' or 'bridge' networking.  If set to host, we disable Docker's iptables se we can redirect 80:8080 and 443:8443
#      name: "jenkins"                     # Optional, only valid if mode='bridge' (above).   If omitted, docker uses the 'docker0' bridge
#      cidr: "192.168.101.1/24"            # Optional, only valid if mode='bridge' (above).   If omitted, docker selects a cidr from a default pool).  If this is set, 'name' must also be set.

jenkins_admin_username: admin
jenkins_admin_password: password

jenkins_home_dir: "/var/jenkins_home"

jenkins_username: jenkins
jenkins_uid: 386
jenkins_gid: "{{jenkins_uid}}"

jenkins_ui:
  email: "example@example.com"
  skin_color: "linear-gradient(110deg, transparent 40%, #000 40%), linear-gradient(90deg, #0085ff 0%, #044689 40%)"
  content: "{{clusterid}} | {{cloud_type | default()}} | {{region | default()}} | {{buildenv | default()}}"

jenkins_agent:
  swarm_version: "3.27"
  numExecutorsMultiplier: 2               # Cannot set to "{{ansible_processor_vcpus * 2}}" because ansible_processor_vcpus is a hostvar, only determined when being built.

jenkins_controller:
  docker_image:
    repo: "https://github.com/jenkinsci/docker.git"
    repo_version: "HEAD"
    repo_dockerfile_path: "/11/debian/buster/hotspot/Dockerfile"    # From: https://github.com/jenkinsci/docker.git
    war_version: "latest-lts"                                       # One of: 'latest-lts', 'latest', or a legitimate version string (from https://repo.jenkins-ci.org/releases/org/jenkins-ci/main/jenkins-war/maven-metadata.xml)
    plugin_cli_version: "latest"                                    # One of: 'latest', or 'tags/<tag>' (e.g. 'tags/2.9.3')
  workspace_dir: "{{jenkins_home_dir}}/jobs"
  plugins:
    - "basic-branch-build-strategies:latest"
    - "blueocean:latest"
    - "configuration-as-code:latest"
    - "docker-workflow:latest"
    - "extended-choice-parameter:latest"
    - "git-parameter:latest"
    - "login-theme:latest"
    - "parameterized-scheduler:latest"
    - "permissive-script-security:latest"
    - "pipeline-utility-steps:latest"
    - "rebuild:latest"
    - "simple-theme:latest"
    - "swarm:latest"
    - "uno-choice:latest"
    - "workflow-aggregator:latest"
  jcasc_numExecutorsMultiplier: 1     # Cannot set jenkins_controller.casc_config.jenkins.jcasc_numExecutorsMultiplier = "{{ansible_processor_vcpus * 3}}" because ansible_processor_vcpus is a hostvar, only determined when being built.
  casc_file:
    local: "/home/{{jenkins_username}}/jenkins_casc.yml"
    remote: "{{jenkins_home_dir}}/casc_configs/jenkins.yml"
  casc_config:
    jenkins:
      systemMessage: "This is the <i>{{jenkins_ui.content}}</i> Jenkins"
      noUsageStatistics: true
      authorizationStrategy: "loggedInUsersCanDoAnything"
      securityRealm:
        local:
          allowsSignup: false
          users:
            - id: "{{jenkins_admin_username}}"
              password: "{{jenkins_admin_password}}"
      remotingSecurity:
        enabled: true
      markupFormatter:
        rawHtml:
          disableSyntaxHighlighting: false
    unclassified:
      location:
        adminAddress: "{{ jenkins_ui.email | default(omit) }}"
      gitHubConfiguration:
        apiRateLimitChecker: ThrottleOnOver   #ThrottleForNormalize, ThrottleOnOver, NoThrottle
      login-theme-plugin:
        header: "{{jenkins_ui.content}}"
        useDefaultTheme: true
      simple-theme-plugin:
        elements:
          - cssText:
              text: |
                #header { background: {{jenkins_ui.skin_color}}; }
                #jenkins-home-link:after {
                  content: '{{jenkins_ui.content}}';
                  vertical-align: middle;
                  padding-left: 10px;
                  mix-blend-mode: difference;
                  font-size: 20px;
                  font-weight: bold;
                  font-style: italic;
                }
      globalDefaultFlowDurabilityLevel:
        durabilityHint: PERFORMANCE_OPTIMIZED
#    credentials:
#      system:
#        domainCredentials:
#          - credentials:
#              - usernamePassword:
#                  scope: GLOBAL
#                  id: GITHUB_SVC_USER
#                  username: SVC_RO
#                  password: "FAKEPASSWD"
#              - string:
#                  scope: GLOBAL
#                  id: VAULT_PASSWORD_SANDBOX
#                  secret: "FAKEPASSWD"
#              - basicSSHUserPrivateKey:
#                  scope: GLOBAL
#                  id: SANDBOX_SSH_KEY
#                  username: ubuntu
#                  privateKeySource:
#                    directEntry:
#                      privateKey: "FAKEPASSWD"