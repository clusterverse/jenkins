---

redeploy_schemes_supported: ['_scheme_addallnew_rmdisk_rollback', '_scheme_addnewvm_rmdisk_rollback', '_scheme_rmvm_rmdisk_only', '_scheme_rmvm_keepdisk_rollback']

redeploy_scheme: _scheme_rmvm_keepdisk_rollback

_scheme_rmvm_keepdisk_rollback__copy_or_move: move

pkgupdate: false
reboot_on_package_upgrade: true

prometheus_node_exporter_install: false
filebeat_install: false
metricbeat_install: false
canary: none


app_name: "jenkins"               # The name of the application cluster (e.g. 'couchbase', 'nginx'); becomes part of cluster_name.
app_class: "cicd"                 # The class of application (e.g. 'database', 'webserver'); becomes part of the fqdn

beats_config:
  filebeat:
#    output_logstash_hosts: ["localhost:5044"]   # The destination hosts for filebeat-gathered logs
#    extra_logs_paths: # The array is optional, if you need to add more paths or files to scrape for logs
#      - /var/log/myapp/*.log
  metricbeat:
#    output_logstash_hosts: ["localhost:5044"]   # The destination hosts for metricbeat-gathered metrics

## Bind configuration and credentials, per environment
bind9:
  dev: {server: "", key_name: "", key_secret: ""}

cluster_name: "{{app_name}}-{{buildenv}}"       # Identifies the cluster within the cloud environment

cluster_vars:
  type: &cloud_type "esxifree"
  image: "gold-ubuntu2004l-20201231161215"
  esxi_ip: "192.168.1.3"
  username: "svc"
  password: "FAKEPASSWD"
  dns_cloud_internal_domain: ""                                 # The cloud-internal zone as defined by the cloud provider (e.g. GCP, AWS)
  dns_nameserver_zone: &dns_nameserver_zone "chezdj.com"        # The zone that dns_server will operate on.  gcloud dns needs a trailing '.'.  Leave blank if no external DNS (use IPs only)
  dns_user_domain: "{%- if _dns_nameserver_zone -%}{{_dns_nameserver_zone}}{%- endif -%}"
  dns_server: ""                                                # Specify DNS server. nsupdate, route53 or clouddns.  If empty string is specified, no DNS will be added.
  custom_tagslabels:
    inv_environment_id: "{{buildenv}}"
    inv_service_id: "{{app_class}}"
    inv_cluster_id: "{{cluster_name}}"
    inv_cluster_type: "{{app_name}}"
  datastore: "4tb-evo860-ssd"
  hardware_version: "18"
#  cloudinit_userdata:
#    - name: user1
#      groups: "admin"
#      lock_passwd: true
#      ssh_authorized_keys: ['ssh-rsa mzVn38vXMzSAB3NzaL2AAAC1yQc2jtl69L==']
#    - name: user2
#      lock_passwd: false
#      passwd: "FAKEPASSWD"
  dev:
    networks:
      - networkName: "VM Network"
        virtualDev: vmxnet3
        cloudinit_netplan:
          ethernets: {eth0: {dhcp4: true}}
    hosttype_vars:
      master: {vms_by_az: {a: 1, b: 0, c: 0}, flavor: {num_cpus: "2", memory_mb: "2048"}, version: "{{jenkins_master.docker.version | regex_replace('[\\.-]', '_') | default('')}}", auto_volumes: [{mountpoint: "{{docker_data_root_dir}}", "volume_size": 32, provisioning_type: "thin", fstype: "ext4"}]}
      slave: {vms_by_az: {a: 1, b: 0, c: 0}, flavor: {num_cpus: "4", memory_mb: "4096"}, version: "{{jenkins_master.docker.version | regex_replace('[\\.-]', '_') | default('')}}", auto_volumes: [{mountpoint: "{{docker_data_root_dir}}", "volume_size": 32, provisioning_type: "thin", fstype: "ext4"}]}
_cloud_type: *cloud_type
_dns_nameserver_zone: *dns_nameserver_zone
